// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240731123123_Init3")]
    partial class Init3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("WebApplication2.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("HeadToHeadStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsHomeMatchForTeam1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LeagueId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MatchDate")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Result")
                        .HasColumnType("REAL");

                    b.Property<int>("Team1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Team2Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("HeadToHeadStatsId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WebApplication2.Models.League", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("WebApplication2.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Age")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NineteenStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StandardStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NineteenStatsId");

                    b.HasIndex("StandardStatsId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("WebApplication2.Models.Stats.HeadToHeadStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("AverageGoalDifference")
                        .HasColumnType("REAL");

                    b.Property<float>("AverageGoals")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Draws")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("WinsTeam1")
                        .HasColumnType("REAL");

                    b.Property<float>("WinsTeam2")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("HeadToHeadStats");
                });

            modelBuilder.Entity("WebApplication2.Models.Stats.MinStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Draws")
                        .HasColumnType("REAL");

                    b.Property<float>("GoalsAgainst")
                        .HasColumnType("REAL");

                    b.Property<float>("GoalsDifference")
                        .HasColumnType("REAL");

                    b.Property<float>("GoalsFor")
                        .HasColumnType("REAL");

                    b.Property<float>("LgRang")
                        .HasColumnType("REAL");

                    b.Property<float>("Loses")
                        .HasColumnType("REAL");

                    b.Property<float>("MatchesPlayed")
                        .HasColumnType("REAL");

                    b.Property<float>("Points")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Wins")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("MinStats");
                });

            modelBuilder.Entity("WebApplication2.Models.Stats.NineteenStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Assists")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Goals")
                        .HasColumnType("REAL");

                    b.Property<float>("Minutes")
                        .HasColumnType("REAL");

                    b.Property<float>("NonPenaltyGoals")
                        .HasColumnType("REAL");

                    b.Property<float>("PenaltyAssists")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("NineteenStats");
                });

            modelBuilder.Entity("WebApplication2.Models.Stats.StandardStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Assists")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("Goals")
                        .HasColumnType("REAL");

                    b.Property<float>("MatchesPlayed")
                        .HasColumnType("REAL");

                    b.Property<float>("Minutes")
                        .HasColumnType("REAL");

                    b.Property<float>("NonPenaltyGoals")
                        .HasColumnType("REAL");

                    b.Property<float>("PenaltyAttempted")
                        .HasColumnType("REAL");

                    b.Property<float>("PenaltyMade")
                        .HasColumnType("REAL");

                    b.Property<float>("PlayingTime")
                        .HasColumnType("REAL");

                    b.Property<float>("RedCards")
                        .HasColumnType("REAL");

                    b.Property<float>("Starts")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<float>("YellowCards")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("StandardStats");
                });

            modelBuilder.Entity("WebApplication2.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("GoalkeeperId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinStatsId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TopTeamScorerId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GoalkeeperId");

                    b.HasIndex("MinStatsId");

                    b.HasIndex("TopTeamScorerId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("WebApplication2.Models.Game", b =>
                {
                    b.HasOne("WebApplication2.Models.Stats.HeadToHeadStats", "HeadToHeadStats")
                        .WithMany()
                        .HasForeignKey("HeadToHeadStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.League", "League")
                        .WithMany("Games")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HeadToHeadStats");

                    b.Navigation("League");

                    b.Navigation("Team1");

                    b.Navigation("Team2");
                });

            modelBuilder.Entity("WebApplication2.Models.Player", b =>
                {
                    b.HasOne("WebApplication2.Models.Stats.NineteenStats", "NineteenStats")
                        .WithMany()
                        .HasForeignKey("NineteenStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Stats.StandardStats", "StandardStats")
                        .WithMany()
                        .HasForeignKey("StandardStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NineteenStats");

                    b.Navigation("StandardStats");
                });

            modelBuilder.Entity("WebApplication2.Models.Team", b =>
                {
                    b.HasOne("WebApplication2.Models.Player", "Goalkeeper")
                        .WithMany()
                        .HasForeignKey("GoalkeeperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Stats.MinStats", "MinStats")
                        .WithMany()
                        .HasForeignKey("MinStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Player", "TopTeamScorer")
                        .WithMany()
                        .HasForeignKey("TopTeamScorerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goalkeeper");

                    b.Navigation("MinStats");

                    b.Navigation("TopTeamScorer");
                });

            modelBuilder.Entity("WebApplication2.Models.League", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
